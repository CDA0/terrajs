module.exports = {
  apply: {
    backup: 'terraform.backup',
    autoApprove: false,
    lock: true,
    lockTimeout: 0,
    input: false,
    noColor: true,
    parallelism: 10,
    refresh: true,
    state: 'terraform.tfstate',
    stateOut: null,
    plan: '',
  },
  destroy: {
    backup: 'terraform.backup',
    autoApprove: false,
    lock: true,
    lockTimeout: 0,
    noColor: true,
    parallelism: 10,
    refresh: true,
    state: 'terraform.tfstate',
    stateOut: null,
  },
  fmt: {
    list: true,
    write: true,
    diff: false,
    check: false,
    noColor: true,
    recursive: false,
  },
  graph: {
    drawCycles: true,
    moduleDepth: -1,
    noColor: true,
  },
  init: {
    backend: true,
    backendConfig: {},
    forceCopy: true,
    get: true,
    getPlugins: true,
    input: false,
    lock: true,
    lockTimeout: 0,
    noColor: true,
    reconfigure: false,
    upgrade: false,
    verifyPlugins: true,
  },
  import: {
    backup: 'terraform.backup',
    allowMissingConfig: false,
    input: false,
    lock: true,
    lockTimeout: 0,
    noColor: true,
    state: 'terraform.tfstate',
    stateOut: null,
  },
  output: {
    state: 'terraform.tfstate',
    noColor: true,
    json: false,
  },
  plan: {
    destroy: false,
    detailedExitcode: false,
    input: false,
    lock: true,
    lockTimeout: 0,
    moduleDepth: -1,
    noColor: true,
    out: 'terraform',
    parallelism: 10,
    refresh: true,
    state: 'terraform.tfstate',
    plan: '',
  },
  validate: {
    checkVariables: false,
    json: false,
    noColor: false,
  },
  taint: {
    allowMissing: false,
    backup: 'terraform.backup',
    lock: true,
    lockTimeout: 0,
    state: 'terraform.tfstate',
    stateOut: null,
  },
  untaint: {
    allowMissing: false,
    backup: 'terraform.backup',
    lock: true,
    lockTimeout: 0,
    noColor: true,
    state: 'terraform.tfstate',
    stateOut: null,
  },
};
